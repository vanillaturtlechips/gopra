services:
  db:
    image: postgres:15-alpine
    container_name: gopra_db
    restart: always
    env_file:
      - .env  # 이 줄 추가
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-gopra} -d ${POSTGRES_DB:-gopra_db}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    container_name: gopra_backend
    build:
      context: .
      dockerfile: Dockerfile.go
    ports:
      - "8080:8080"
    env_file:
      - .env  # 이 줄 추가
    environment:
      POSTGRES_URL: ${POSTGRES_URL}
      BLOB_READ_WRITE_TOKEN: ${BLOB_READ_WRITE_TOKEN}
    depends_on:
      db:
        condition: service_healthy

  frontend:
    container_name: gopra_frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    environment:
      VITE_API_URL: http://backend:8080
    depends_on:
      - backend

volumes:
  postgres_data: